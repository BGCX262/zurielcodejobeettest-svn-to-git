<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class JobeetJob extends BaseJobeetJob
{
	public function getCompanySlug(){ return Jobeet::slugfy($this->getCompany()); }
	
	public function getPositionSlug(){ return Jobeet::slugfy($this->getPosition()); }
	
	public function getLocationSlug(){ return Jobeet::slugfy($this->getLocation()); }
	
	//METODO DE ESCRITURA EN DB
	public function save ( Doctrine_Connection $conn = null ){
		//Si el objeto se está por serialzar por primera vez, y no se especificó la fecha de caducidad...
		if ( $this->isNew() && !$this->getExpiresAt() ){
			//Si existe la fecha de creación, la utilizamos. De lo contrario utilizamos el tiempo actual
			$timeNow = ( $this->getCreatedAt() ) ? strtotime('', $this->getCreatedAt() ) : time();
			$this->setExpiresAt(date('Y-m-d h:i:s', $timeNow + ( 60 * 60 * 24 ) * sfConfig::get('app_active_days') )); //( segundos * minutos * horas ) * dias
		}

		if (!$this->getToken()) {
			$this->setToken(sha1($this->getEmail().rand(11111, 99999)));
		}

		return parent::save($conn);
	}

	public function getTypeName() {
		$types = Doctrine::getTable('JobeetJob')->getTypes();
		return $this->getType() ? $types[$this->getType()] : '';
	}

	public function isExpired() {
		return $this->getDaysBeforeExpires() < 0;
	}

	public function expiresSoon() {
		return $this->getDaysBeforeExpires() < 5;
	}

	public function getDaysBeforeExpires() {
		return floor((strtotime($this->getExpiresAt()) - time()) / 86400);
	}

	public function __toString(){
		return sprintf('%s at %s (%s)', $this->getPosition(), $this->getCompany(), $this->getLocation());
	}

	public function publish() {
		$this->setIsActivated(true);
		$this->save();
	}
}